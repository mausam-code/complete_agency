{"ast":null,"code":"import api from './api';\nexport const authService = {\n  // Login with JWT\n  async login(username, password) {\n    const response = await api.post('/accounts/auth/token/', {\n      username,\n      password\n    });\n    const {\n      access,\n      refresh,\n      user\n    } = response.data;\n    localStorage.setItem('access_token', access);\n    localStorage.setItem('refresh_token', refresh);\n    localStorage.setItem('user', JSON.stringify(user));\n    return {\n      access,\n      refresh,\n      user\n    };\n  },\n  // Logout\n  async logout() {\n    try {\n      const refreshToken = localStorage.getItem('refresh_token');\n      if (refreshToken) {\n        await api.post('/accounts/auth/logout/', {\n          refresh_token: refreshToken\n        });\n      }\n    } catch (error) {\n      console.error('Logout error:', error);\n    } finally {\n      localStorage.removeItem('access_token');\n      localStorage.removeItem('refresh_token');\n      localStorage.removeItem('user');\n    }\n  },\n  // Get current user\n  async getCurrentUser() {\n    const response = await api.get('/accounts/auth/me/');\n    const user = response.data;\n    localStorage.setItem('user', JSON.stringify(user));\n    return user;\n  },\n  // Change password\n  async changePassword(oldPassword, newPassword, confirmPassword) {\n    const response = await api.post('/accounts/auth/change-password/', {\n      old_password: oldPassword,\n      new_password: newPassword,\n      confirm_password: confirmPassword\n    });\n    return response.data;\n  },\n  // Check if user is authenticated\n  isAuthenticated() {\n    return !!localStorage.getItem('access_token');\n  },\n  // Get user from localStorage\n  getUser() {\n    const user = localStorage.getItem('user');\n    return user ? JSON.parse(user) : null;\n  },\n  // Get user role\n  getUserRole() {\n    const user = this.getUser();\n    return (user === null || user === void 0 ? void 0 : user.role) || null;\n  },\n  // Get user level\n  getUserLevel() {\n    const user = this.getUser();\n    return (user === null || user === void 0 ? void 0 : user.level) || 3;\n  },\n  // Check if user has permission\n  hasPermission(requiredLevel) {\n    const userLevel = this.getUserLevel();\n    return userLevel <= requiredLevel;\n  },\n  // Check if user can manage users\n  canManageUsers() {\n    const user = this.getUser();\n    return (user === null || user === void 0 ? void 0 : user.level) <= 2;\n  },\n  // Check if user can view financial data\n  canViewFinancialData() {\n    const user = this.getUser();\n    return (user === null || user === void 0 ? void 0 : user.role) === 'superadmin' || (user === null || user === void 0 ? void 0 : user.role) === 'accountant';\n  }\n};","map":{"version":3,"names":["api","authService","login","username","password","response","post","access","refresh","user","data","localStorage","setItem","JSON","stringify","logout","refreshToken","getItem","refresh_token","error","console","removeItem","getCurrentUser","get","changePassword","oldPassword","newPassword","confirmPassword","old_password","new_password","confirm_password","isAuthenticated","getUser","parse","getUserRole","role","getUserLevel","level","hasPermission","requiredLevel","userLevel","canManageUsers","canViewFinancialData"],"sources":["S:/all projects/aa/new_app/frontend/src/services/auth.js"],"sourcesContent":["import api from './api';\n\nexport const authService = {\n  // Login with JWT\n  async login(username, password) {\n    const response = await api.post('/accounts/auth/token/', {\n      username,\n      password,\n    });\n    \n    const { access, refresh, user } = response.data;\n    localStorage.setItem('access_token', access);\n    localStorage.setItem('refresh_token', refresh);\n    localStorage.setItem('user', JSON.stringify(user));\n    \n    return { access, refresh, user };\n  },\n\n  // Logout\n  async logout() {\n    try {\n      const refreshToken = localStorage.getItem('refresh_token');\n      if (refreshToken) {\n        await api.post('/accounts/auth/logout/', {\n          refresh_token: refreshToken,\n        });\n      }\n    } catch (error) {\n      console.error('Logout error:', error);\n    } finally {\n      localStorage.removeItem('access_token');\n      localStorage.removeItem('refresh_token');\n      localStorage.removeItem('user');\n    }\n  },\n\n  // Get current user\n  async getCurrentUser() {\n    const response = await api.get('/accounts/auth/me/');\n    const user = response.data;\n    localStorage.setItem('user', JSON.stringify(user));\n    return user;\n  },\n\n  // Change password\n  async changePassword(oldPassword, newPassword, confirmPassword) {\n    const response = await api.post('/accounts/auth/change-password/', {\n      old_password: oldPassword,\n      new_password: newPassword,\n      confirm_password: confirmPassword,\n    });\n    return response.data;\n  },\n\n  // Check if user is authenticated\n  isAuthenticated() {\n    return !!localStorage.getItem('access_token');\n  },\n\n  // Get user from localStorage\n  getUser() {\n    const user = localStorage.getItem('user');\n    return user ? JSON.parse(user) : null;\n  },\n\n  // Get user role\n  getUserRole() {\n    const user = this.getUser();\n    return user?.role || null;\n  },\n\n  // Get user level\n  getUserLevel() {\n    const user = this.getUser();\n    return user?.level || 3;\n  },\n\n  // Check if user has permission\n  hasPermission(requiredLevel) {\n    const userLevel = this.getUserLevel();\n    return userLevel <= requiredLevel;\n  },\n\n  // Check if user can manage users\n  canManageUsers() {\n    const user = this.getUser();\n    return user?.level <= 2;\n  },\n\n  // Check if user can view financial data\n  canViewFinancialData() {\n    const user = this.getUser();\n    return user?.role === 'superadmin' || user?.role === 'accountant';\n  },\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}